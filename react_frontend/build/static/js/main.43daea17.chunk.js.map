{"version":3,"sources":["App.js","index.js"],"names":["App","file","setFile","useState","analysis","setAnalysis","loading","setLoading","error","setError","progress","setProgress","React","createElement","className","onSubmit","async","event","preventDefault","formData","FormData","append","response","axios","post","headers","Content-Type","timeout","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","data","isAxiosError","code","concat","detail","request","message","console","type","onChange","selectedFile","target","files","size","accept","disabled","style","width","summary","key_points","map","point","index","key","arguments_for","arg","arguments_against","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAsHeA,MAlHf,WACE,MAAOC,EAAMC,GAAWC,mBAAS,OAC1BC,EAAUC,GAAeF,mBAAS,OAClCG,EAASC,GAAcJ,oBAAS,IAChCK,EAAOC,GAAYN,mBAAS,OAC5BO,EAAUC,GAAeR,mBAAS,GAsDzC,OACES,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,0CACJD,IAAAC,cAAA,QAAME,SA5CWC,UAEnB,GADAC,EAAMC,kBACDjB,EAAM,OAEXM,GAAW,GACXE,EAAS,MACTJ,EAAY,MACZM,EAAY,GACZ,MAAMQ,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQpB,GAExB,IACE,MAAMqB,QAAiBC,IAAMC,KAAK,qCAAsCL,EAAU,CAChFM,QAAS,CAAEC,eAAgB,uBAC3BC,QAAS,IACTC,iBAAmBC,IACjB,MAAMC,EAAmBC,KAAKC,MAA8B,IAAvBH,EAAcI,OAAgBJ,EAAcK,OACjFvB,EAAYmB,MAGhBzB,EAAYiB,EAASa,MACrB,MAAO3B,GACHe,IAAMa,aAAa5B,GACF,iBAAfA,EAAM6B,KACR5B,EAAS,kEACAD,EAAMc,SACfb,EAAQ,UAAA6B,OAAW9B,EAAMc,SAASa,KAAKI,QAAU,kBACxC/B,EAAMgC,QACf/B,EAAS,iFAETA,EAAQ,UAAA6B,OAAW9B,EAAMiC,UAG3BhC,EAAS,mDAEXiC,QAAQlC,MAAM,wBAAyBA,GACxC,QACCD,GAAW,KAOmBO,UAAU,eACtCF,IAAAC,cAAA,SACE8B,KAAK,OACLC,SA1DkB3B,IACxB,MAAM4B,EAAe5B,EAAM6B,OAAOC,MAAM,GACpCF,GAAgBA,EAAaG,KAAO,UACtCvC,EAAS,iCACTP,EAAQ,QAERA,EAAQ2C,GACRpC,EAAS,QAoDLwC,OAAO,OACPnC,UAAU,eAEZF,IAAAC,cAAA,UACE8B,KAAK,SACLO,UAAWjD,GAAQK,EACnBQ,UAAS,iBAAAwB,QAAqBrC,GAAQK,EAAW,WAAa,KAE7DA,EAAU,eAAiB,iBAG/BA,GACCM,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,gBAAgBqC,MAAO,CAACC,MAAK,GAAAd,OAAK5B,EAAQ,OACtDA,EAAS,MAIfF,GAASI,IAAAC,cAAA,KAAGC,UAAU,SAASN,GAC/BJ,GACCQ,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,SAAIT,EAASiD,SACbzC,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,UACGT,EAASkD,WAAWC,IAAI,CAACC,EAAOC,IAC/B7C,IAAAC,cAAA,MAAI6C,IAAKD,GAAQD,KAGrB5C,IAAAC,cAAA,UAAI,iBACJD,IAAAC,cAAA,UACGT,EAASuD,cAAcJ,IAAI,CAACK,EAAKH,IAChC7C,IAAAC,cAAA,MAAI6C,IAAKD,GAAQG,KAGrBhD,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,UACGT,EAASyD,kBAAkBN,IAAI,CAACK,EAAKH,IACpC7C,IAAAC,cAAA,MAAI6C,IAAKD,GAAQG,QCzG/BE,IAASC,OACPnD,IAAAC,cAACD,IAAMoD,WAAU,KACfpD,IAAAC,cAACb,EAAG,OAENiE,SAASC,eAAe","file":"static/js/main.43daea17.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // We'll create this file for styling\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [analysis, setAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [progress, setProgress] = useState(0);\n\n  const handleFileChange = (event) => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile && selectedFile.size > 10 * 1024 * 1024) {\n      setError(\"File size exceeds 10MB limit.\");\n      setFile(null);\n    } else {\n      setFile(selectedFile);\n      setError(null);\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!file) return;\n\n    setLoading(true);\n    setError(null);\n    setAnalysis(null);\n    setProgress(0);\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await axios.post('http://localhost:3005/api/analyze/', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n        timeout: 300000,\n        onUploadProgress: (progressEvent) => {\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n          setProgress(percentCompleted);\n        }\n      });\n      setAnalysis(response.data);\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        if (error.code === 'ECONNABORTED') {\n          setError('The request timed out. Please try again or use a smaller file.');\n        } else if (error.response) {\n          setError(`Error: ${error.response.data.detail || 'Unknown error'}`);\n        } else if (error.request) {\n          setError('No response received from server. Please check your connection and try again.');\n        } else {\n          setError(`Error: ${error.message}`);\n        }\n      } else {\n        setError('An unexpected error occurred. Please try again.');\n      }\n      console.error('Error analysing file:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Australian Parliamentary Bill Analyser</h1>\n      <form onSubmit={handleSubmit} className=\"upload-form\">\n        <input \n          type=\"file\" \n          onChange={handleFileChange} \n          accept=\".pdf\" \n          className=\"file-input\"\n        />\n        <button \n          type=\"submit\" \n          disabled={!file || loading} \n          className={`submit-button ${(!file || loading) ? 'disabled' : ''}`}\n        >\n          {loading ? 'Analysing...' : 'Analyse Bill'}\n        </button>\n      </form>\n      {loading && (\n        <div className=\"progress-bar\">\n          <div className=\"progress-fill\" style={{width: `${progress}%`}}>\n            {progress}%\n          </div>\n        </div>\n      )}\n      {error && <p className=\"error\">{error}</p>}\n      {analysis && (\n        <div className=\"results\">\n          <h2>Analysis Results</h2>\n          <h3>Summary</h3>\n          <p>{analysis.summary}</p>\n          <h3>Key Points</h3>\n          <ul>\n            {analysis.key_points.map((point, index) => (\n              <li key={index}>{point}</li>\n            ))}\n          </ul>\n          <h3>Arguments For</h3>\n          <ul>\n            {analysis.arguments_for.map((arg, index) => (\n              <li key={index}>{arg}</li>\n            ))}\n          </ul>\n          <h3>Arguments Against</h3>\n          <ul>\n            {analysis.arguments_against.map((arg, index) => (\n              <li key={index}>{arg}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}